[{"/Users/harry/project/open-source/react-app-template/src/App.js":"1","/Users/harry/project/open-source/react-app-template/src/components/Demo.js":"2","/Users/harry/project/open-source/react-app-template/src/index.js":"3","/Users/harry/project/open-source/react-app-template/src/model/constants/counter.js":"4","/Users/harry/project/open-source/react-app-template/src/model/store/index.js":"5"},{"size":241,"mtime":1607421571763,"results":"6","hashOfConfig":"7"},{"size":656,"mtime":1607422259793,"results":"8","hashOfConfig":"7"},{"size":1051,"mtime":1607420806995,"results":"9","hashOfConfig":"7"},{"size":56,"mtime":1607414059608,"results":"10","hashOfConfig":"7"},{"size":791,"mtime":1607422165632,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mrkksh",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/harry/project/open-source/react-app-template/src/App.js",[],"/Users/harry/project/open-source/react-app-template/src/components/Demo.js",[],"/Users/harry/project/open-source/react-app-template/src/index.js",[],"/Users/harry/project/open-source/react-app-template/src/model/constants/counter.js",[],"/Users/harry/project/open-source/react-app-template/src/model/store/index.js",["23"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst composeEnhancers = typeof window === 'object'\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Specify extensionâ€™s options like name, actionsBlacklist, actionsCreators, serialize...\n  }) : compose;\n\nconst middlewares = [\n  thunkMiddleware,\n];\n\n// if (process.env.NODE_ENV === 'development') {\n//   middlewares.push(require('redux-logger').createLogger());\n// }\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middlewares),\n  // other store enhancers if any\n);\n\nexport default function configStore() {\n  const store = createStore(rootReducer, enhancer);\n  return store;\n}\n",{"ruleId":"24","severity":2,"message":"25","line":16,"column":20,"nodeType":"26","messageId":"27","endLine":16,"endColumn":43},"global-require","Unexpected require().","CallExpression","unexpected"]